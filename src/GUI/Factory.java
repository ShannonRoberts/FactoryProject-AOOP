package GUI;

import Factory.*;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Vector;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Shan_
 */
public class Factory extends javax.swing.JFrame {

    private static Collider collider;
    private ElectricFence ef;
    private Laser laser;
    private static Drone drone;
    static int droneCount = 0;
    static int ballCount = 0;
    static Lock masterLock = new ReentrantLock();
    Graphics2D graphics;
    
    /**
     * Creates new JFrame form Factory.
     * Creates and starts threads for factory objects.
     */
    public Factory() {
        initComponents();
        graphics = (Graphics2D) mainJPanel.getGraphics();
        
        Alien alien = new Alien(mainJPanel, graphics, masterLock);
        Thread alienT = new Thread(alien);
        alienT.start();
        
        Trampoline tramp = new Trampoline(mainJPanel, graphics, masterLock);
        Thread trampT = new Thread(tramp);
        trampT.start();
        
        ef = new ElectricFence(mainJPanel, graphics, masterLock);
        Thread efT = new Thread(ef);
        efT.start();
        
        laser = new Laser(mainJPanel, graphics, masterLock);
        Thread laserThread = new Thread(laser);
        laserThread.start();
        
        Platform platform = new Platform(mainJPanel, graphics, masterLock);
        Thread platT = new Thread(platform);
        platT.start();
        
        collider = new Collider(alien,null,tramp, ef,laser,platform, masterLock);
        Thread colliderT = new Thread(collider);
        colliderT.start();
        
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJPanel = new javax.swing.JPanel();
        interfaceJP = new javax.swing.JPanel();
        addBallButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        efButton = new javax.swing.JButton();
        laserButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        addDroneButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(null);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 800));

        mainJPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainJPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainJPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainJPanelLayout = new javax.swing.GroupLayout(mainJPanel);
        mainJPanel.setLayout(mainJPanelLayout);
        mainJPanelLayout.setHorizontalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        mainJPanelLayout.setVerticalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 746, Short.MAX_VALUE)
        );

        interfaceJP.setBackground(new java.awt.Color(204, 255, 255));

        addBallButton.setBackground(new java.awt.Color(255, 255, 255));
        addBallButton.setText("Add Ball");
        addBallButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBallButtonMouseClicked(evt);
            }
        });

        stopButton.setBackground(new java.awt.Color(255, 255, 255));
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        efButton.setBackground(new java.awt.Color(255, 255, 255));
        efButton.setText("Toggle Electric Fence");
        efButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efButtonActionPerformed(evt);
            }
        });

        laserButton.setBackground(new java.awt.Color(255, 255, 255));
        laserButton.setText("Toggle Laser");
        laserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laserButtonActionPerformed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(255, 255, 255));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        addDroneButton.setBackground(new java.awt.Color(255, 255, 255));
        addDroneButton.setText("Add Drone");
        addDroneButton.setToolTipText("");
        addDroneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDroneButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout interfaceJPLayout = new javax.swing.GroupLayout(interfaceJP);
        interfaceJP.setLayout(interfaceJPLayout);
        interfaceJPLayout.setHorizontalGroup(
            interfaceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interfaceJPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBallButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addDroneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(efButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(laserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        interfaceJPLayout.setVerticalGroup(
            interfaceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(interfaceJPLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(interfaceJPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBallButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(efButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(laserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDroneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(interfaceJP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(interfaceJP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainJPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainJPanelMouseClicked
/********* used for testing **********/
//        BouncyBall bb = new BouncyBall(evt.getX(),evt.getY(),50,50,canvas,true,false,collider);
//        Thread bbThread = new Thread(bb);
//        bbThread.start();
//        bbs.add(bb);
//        collider.setBalls(bbs);
//        if(droneCount == 0){
//           drone = new Drone(mainJPanel, evt.getX(),evt.getY(), graphics,masterLock);
//        Thread dThread = new Thread(drone);
//        dThread.start();
//        collider.setDrone(drone);
//        droneCount = 1;
//        return;
//        }
        
    }//GEN-LAST:event_mainJPanelMouseClicked
/**
 * Adds a ball to the factory when clicked.
 * @param evt java.awt.event.MouseEvent
 */
    private void addBallButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBallButtonMouseClicked
        // TODO add your handling code here:
        if(ballCount < 5){
            BouncyBall bb = new BouncyBall(273, 22, 50, 50, mainJPanel, true, false, graphics, masterLock);
            bb.setX(bb.randomSpawn());
            Thread bbThread = new Thread(bb);
            bbThread.start();
            collider.addBall(bb);
            ballCount++;
            return;
        }
    }//GEN-LAST:event_addBallButtonMouseClicked
    /**
     * Removes all deployable objects from the factory.
     * @param evt java.awt.event.ActionEvent
     */
    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed

        collider.removeAll();
        ballCount = 0;
        droneCount = 0;
    }//GEN-LAST:event_stopButtonActionPerformed
/**
 * Toggles the state of the ElectricFence.
 * @param evt java.awt.event.ActionEvent
 */
    private void efButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efButtonActionPerformed
        // TODO add your handling code here:
        if(ef.isState()){
            ef.setState(false);
        }
        else{
           ef.setState(true); 
        }
        collider.seteFence(ef);
        //updateColliders();
    }//GEN-LAST:event_efButtonActionPerformed
/**
 * Toggles the laser beam on and off.
 * @param evt java.awt.event.ActionEvent
 */
    private void laserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laserButtonActionPerformed
        if(laser.getShoot()){
            laser.setShoot(false);
        }
        else{
            laser.setShoot(true);
        }
        
    }//GEN-LAST:event_laserButtonActionPerformed
/**
 * Exits the application.
 * @param evt java.awt.event.ActionEvent
 */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(this, "Do you want to exit program?");
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitButtonActionPerformed
/**
 * Adds a drone to the factory when clicked.
 * @param evt java.awt.event.ActionEvent
 */
    private void addDroneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDroneButtonActionPerformed
        // TODO add your handling code here:
        if (droneCount == 0) {
            drone = new Drone(mainJPanel,100,100,graphics,masterLock);
            drone.setX(drone.randomSpawn());
            Thread dThread = new Thread(drone);
            dThread.start();
            collider.setDrone(drone);
            droneCount = 1;
            return;
        }
    }//GEN-LAST:event_addDroneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Factory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Factory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Factory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Factory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factory().setVisible(true);
                
            }
        });
        
        //Checks the drone and ball count. On a timer.
        ActionListener taskPerformer = (ActionEvent evt) -> {
            //...Perform a task...
            
            if(drone != null &&!drone.isRunning()){
            
                droneCount = 0;
                drone = null;
                collider.setDrone(null);
            }
            ballCount = 0;
            for(BouncyBall b : collider.getBalls()){
                ballCount += 1;
            }
        };
        Timer timer = new Timer(1000,taskPerformer);
        timer.start();
        
        
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBallButton;
    private javax.swing.JButton addDroneButton;
    private javax.swing.JButton efButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JPanel interfaceJP;
    private javax.swing.JButton laserButton;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
